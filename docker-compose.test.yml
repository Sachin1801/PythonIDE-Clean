version: '3.8'

services:
  # Test PostgreSQL database
  postgres-test:
    image: postgres:15.7-alpine
    container_name: pythonide-test-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pythonide_test
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port from main postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pythonide-test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pythonide-test-app
    ports:
      - "10087:8080"  # Different port from main app
    environment:
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres-test:5432/pythonide_test
      IDE_SECRET_KEY: test-secret-key-for-testing
      IDE_DATA_PATH: /app/test-projects

      # Performance testing variables (configurable)
      TORNADO_PROCESSES: ${TEST_TORNADO_PROCESSES:-1}  # Default single process
      DB_POOL_MIN: ${TEST_DB_POOL_MIN:-5}
      DB_POOL_MAX: ${TEST_DB_POOL_MAX:-25}
      MAX_CONCURRENT_EXECUTIONS: ${TEST_MAX_CONCURRENT:-60}
      CLEANUP_INTERVAL_MS: ${TEST_CLEANUP_INTERVAL:-300000}

      # Resource limits
      EXECUTION_TIMEOUT: 30
      MEMORY_LIMIT_MB: 128
      MAX_PROCESS_AGE: 1800
      MAX_REPL_AGE: 3600

    volumes:
      # Test data directory
      - test_user_files:/app/test-projects
      # Mount migrations
      - ./server/migrations:/app/server/migrations
    depends_on:
      postgres-test:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations and creating test users...' &&
        cd /app/server &&
        python migrations/create_real_class_users.py --no-remove 2>/dev/null || true &&
        echo 'Starting server with TORNADO_PROCESSES=${TEST_TORNADO_PROCESSES:-1}...' &&
        python server.py
      "

volumes:
  test_postgres_data:
  test_user_files: