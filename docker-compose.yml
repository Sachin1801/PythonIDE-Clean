version: '3.8'

services:
  # Local PostgreSQL for development only
  postgres:
    image: postgres:15.7-alpine
    container_name: pythonide-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pythonide
    volumes:
      # Persistent database storage
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pythonide:
    build: .
    container_name: pythonide-app
    ports:
      - "10086:8080"
    environment:
      # For AWS deployment, this will be overridden with RDS endpoint
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/pythonide}
      IDE_SECRET_KEY: ${IDE_SECRET_KEY:-secure-key-change-in-production}
      MAX_CONCURRENT_EXECUTIONS: 60
      EXECUTION_TIMEOUT: 60
      MEMORY_LIMIT_MB: 128
      TORNADO_PROCESSES: ${TORNADO_PROCESSES:-1}
    volumes:
      # CRITICAL: Mount persistent storage for user files
      - user_files:/app/server/projects/ide
      # Mount initialization script
      - ./server/migrations:/app/server/migrations
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Starting server...' &&
        python server.py
      "

volumes:
  # Named volumes for persistent storage (works on both Mac and WSL2)
  postgres_data:
  user_files: